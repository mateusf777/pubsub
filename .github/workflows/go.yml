# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        check-latest: true
        cache-dependency-path: "**/*.sum"

    - name: Build
      run: >-
        cd server &&
        go build -o ../build/ps-server ./cmd/pubsub &&
        cd ../example &&
        go build -o ../build/queue ./queue &&
        go build -o ../build/subscriber ./subscriber &&
        go build -o ../build/publisher ./publisher &&
        go build -o ../build/request ./request

    - name: Setup mockery
      run: go install github.com/vektra/mockery/v2@v2.52.1

    - name: Test core
      run: >-
        cd core &&
        mockery &&
        go test . -cover -race -coverprofile=./cover-core.out -json > ../test-core.json

    - name: Test server
      run: >-
        cd server &&
        mockery &&
        go test . -cover -race -coverprofile=./cover-server.out -json > ../test-server.json

    - name: Test client
      run: >-
        cd client &&
        mockery &&
        go test . -cover -race -coverprofile=./cover-client.out -json > ../test-client.json

    - name: Coverage core
      run: >-
        cd core &&
        grep -v "mock_" cover-core.out > cover-core.tmp && mv cover-core.tmp cover-core.out &&
        go tool cover -html cover-core.out -o ../cover-core.html

    - name: Coverage server
      run: >-
        cd server &&
        grep -v "mock_" cover-server.out > cover-server.tmp && mv cover-server.tmp cover-server.out &&
        go tool cover -html cover-server.out -o ../cover-server.html

    - name: Coverage client
      run: >-
        cd client &&
        grep -v "mock_" cover-client.out > cover-client.tmp && mv cover-client.tmp cover-client.out &&
        go tool cover -html cover-client.out -o ../cover-client.html

    - name: Upload core test results
      uses: actions/upload-artifact@v4
      with:
        name: Go-test-results-core
        path: test-core.json

    - name: Upload server test results
      uses: actions/upload-artifact@v4
      with:
        name: Go-test-results-server
        path: test-server.json

    - name: Upload client test results
      uses: actions/upload-artifact@v4
      with:
        name: Go-test-results-client
        path: test-client.json

    - name: Upload core coverage results
      uses: actions/upload-artifact@v4
      with:
        name: Go-coverage-results-core
        path: cover-core.html

    - name: Upload server coverage results
      uses: actions/upload-artifact@v4
      with:
        name: Go-coverage-results-server
        path: cover-server.html

    - name: Upload client coverage results
      uses: actions/upload-artifact@v4
      with:
        name: Go-coverage-results-client
        path: cover-client.html

    - name: Build container image
      uses: docker/build-push-action@v6
      with:
        context: "{{defaultContext}}:server"
        push: false
        tags: pubsub:latest

    - name: Integration Tests
      run: |
        docker run -d --rm -p 9999:9999 --name test pubsub:latest
        cd example/integration
        go test .
        docker stop test